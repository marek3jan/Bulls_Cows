text = """
project_2.py: druhÃ½ projekt do Engeto Online Python Akademie
autor: Marek Trojan
email: troj3.marek@gmail.com
git: marek3jan
"""

# 1_Head_of_program - basic introduction:
# - imported function and introduction to game
# -> this program is designed to create a game Bulls and Cows
# -> This game generates a random number in range of 3 to 5 digits
# ->     at the beginning the program greets you and asks you to type a number of digits in range from 3 to 5
# ->     after typing the given number of digits, the program generates a random number
# ->     the game will keep looping until you have guessed the number correctly

from random import randint

str1 = "BULLS AND COWS GAME GENERATOR WELCOMES YOU"
str2 = "This program generates a random number for you to guess"
str3 = "Bulls number shows you how many digits you have guessed right by value and location"
str4 = "Cows number shows you how many digits are correct by value, but wrong with location"
str5 = "At first, choose the number of digits of the generated number"

print(f"{'=' * len(str3)}",f"{'BULLS AND COWS GAME GENERATOR WELCOMES YOU': ^83}", f"{'=' * len(str3)}", sep="\n")
print('',f"{str2: ^83}",'',f"{str3}",f"{str4}",'',f"{str5: ^83}",'',f"{'-' * len(str3)}", sep="\n")


# 2_Core_of_program:
#  - created functions that generate the whole process of the program
def generate_input():
    my_input = input("Type the number of digits from 3 to 5: ")
    return my_input


def generate_number(digits):
    number = ""
    if digits == 0:
        number = ""
    elif not digits.isdigit():
        number = ""
    else:
        c1 = str(randint(1, 9))
        number += c1
        for c in range(1, int(digits)):
            c = str(randint(0, 9))
            number += c
    return number


#2a_Commentary: known_number represents the number generated by program
#               - it must be called outside the function generate_result(number), otherwise the function does not know where to find it
known_number = generate_number(generate_input())


#2b_Commentary: This script is designed to loop you through the program until you guessed the number right
#              -> however, in generate_result(number) function there is a chance to exit the program by typing exit
#              -> therefore, each time you see a command -> Enter a number (or exit): -> you can finish the game by typing exit
def generate_result(number):
    cow = 0
    bull = 0
    length = len(known_number)
    elements = [known_number[i] for i in range(length)]
    values = [number[i] for i in range(len(number))]
    if number == "exit":
        exit()

    if len(number) == length:
        for i in range(length):

            if number[i] == known_number[i]:
                elements.remove(number[i])
                values.remove(number[i])
                bull += 1

        for i in range(len(values)):
            if values[i] in elements:
                cow += 1
        result = f"{bull} bulls, {cow} cows"
        return result

    else:
        return f"You have to type {len(known_number)} digit number"


def generate_game():
    guesses = 1
    text1 = f"I've generated a random {len(known_number)} digit number for you."
    text2 = "Let's play a bulls and cows game."
    text3 = "Type exit if you want to leave the program"

    if len(known_number) == 0:
        print("", "You have to input a number...", "", sep="\n")

    elif len(known_number) == 1:
        print("", "You can't play bulls and cows game with 1 digit..." "", sep="\n")

    elif len(known_number) == 2:
        print("", "You can't play bulls and cows game with 2 digits...", "", sep="\n")

    elif len(known_number) >= 6:
        print("", "You have overcome the maximum capacity of the game.", "", sep="\n")

    else:
        print('', "-" * 83, f"{text1: ^83}", f"{text2: ^83}", "-" * 83, f"{text3: ^83} ","", sep="\n")

        guess = input("Enter a number (or exit): ")

        while generate_result(guess) != f"{len(known_number)} bulls, 0 cows":
            if guess.isdigit() and len(guess) == len(known_number):
                print(" ", f"{generate_result(guess)}", sep="\n")
                guess = input("Enter a number (or exit): ")
                guesses += 1
                generate_result(guess)

            else:
                print("", f"{generate_result(guess)}", "", sep="\n")
                guess = input("Enter a number (or exit): ")
                generate_result(guess)
        return print("", f"Your score of guesses is: {guesses}", sep="\n")


# 3_Program_Runner:
# - The last part of the script, generating the program to run in the desired order
if __name__ == "__main__":
    generate_game()
    next_step = input("Type YES if you want to repeat the game: ")

    while next_step == "YES" or next_step == "yes":
        known_number = generate_number(generate_input())
        generate_game()
        next_step = input("Type YES if you want to repeat the game: ")
